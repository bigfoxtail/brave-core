diff --git a/chrome/browser/translate/translate_service.cc b/chrome/browser/translate/translate_service.cc
index 9caa66765cb1d003e0350119e240d9cf40dcb9e5..02490599aec50e5a3c9f6d544950442cd10d9816 100644
--- a/chrome/browser/translate/translate_service.cc
+++ b/chrome/browser/translate/translate_service.cc
@@ -25,6 +25,8 @@
 #include "content/public/common/url_constants.h"
 #include "url/gurl.h"
 #include "url/url_constants.h"
+#include "chrome/browser/profiles/profile.h"
+#include "content/public/browser/storage_partition.h"
 
 #if defined(OS_CHROMEOS)
 #include "chrome/browser/chromeos/file_manager/app_id.h"
@@ -67,6 +69,28 @@ void TranslateService::Initialize() {
       g_browser_process->GetApplicationLocale());
 }
 
+void TranslateService::Initialize(Profile* profile_) {
+  if (g_translate_service)
+    return;
+
+  g_translate_service = new TranslateService;
+  // Initialize the allowed state for resource requests.
+  g_translate_service->OnResourceRequestsAllowed();
+  translate::TranslateDownloadManager* download_manager =
+      translate::TranslateDownloadManager::GetInstance();
+
+  scoped_refptr<network::SharedURLLoaderFactory> myurl_loader_factory =
+      content::BrowserContext::GetDefaultStoragePartition(profile_)
+          ->GetURLLoaderFactoryForBrowserProcess();
+
+  // Manager will be null if called from InitializeForTesting.
+  if (myurl_loader_factory) {
+    download_manager->set_url_loader_factory(myurl_loader_factory);
+  }
+  download_manager->set_application_locale(
+      g_browser_process->GetApplicationLocale());
+}
+
 // static
 void TranslateService::Shutdown(bool cleanup_pending_fetcher) {
   translate::TranslateDownloadManager* download_manager =
